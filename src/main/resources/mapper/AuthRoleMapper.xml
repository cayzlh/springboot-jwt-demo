<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cayzlh.jwt.mapper.AuthRoleMapper">
  <resultMap id="BaseResultMap" type="com.cayzlh.jwt.model.AuthRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="authority" jdbcType="CHAR" property="authority" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_name, authority, create_time
  </sql>
  <select id="selectByExample" parameterType="com.cayzlh.jwt.model.example.AuthRoleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_auth_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_auth_role
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_auth_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_auth_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_auth_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cayzlh.jwt.model.example.AuthRoleExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_auth_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cayzlh.jwt.model.AuthRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_auth_role (user_name, authority, create_time
      )
    values (#{userName,jdbcType=VARCHAR}, #{authority,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cayzlh.jwt.model.AuthRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_auth_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_name')">
            user_name,
          </if>
          <if test="_parameter.hasSelective('authority')">
            authority,
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time,
          </if>
        </when>
        <otherwise>
          <if test="userName != null">
            user_name,
          </if>
          <if test="authority != null">
            authority,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_name')">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('authority')">
            #{authority,jdbcType=CHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="userName != null">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="authority != null">
            #{authority,jdbcType=CHAR},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cayzlh.jwt.model.example.AuthRoleExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_auth_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_auth_role
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('id')">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('user_name')">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('authority')">
            authority = #{record.authority,jdbcType=CHAR},
          </if>
          <if test="record.hasSelective('create_time')">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.userName != null">
            user_name = #{record.userName,jdbcType=VARCHAR},
          </if>
          <if test="record.authority != null">
            authority = #{record.authority,jdbcType=CHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_auth_role
    set id = #{record.id,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      authority = #{record.authority,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cayzlh.jwt.model.AuthRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_auth_role
    <set>
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_name')">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('authority')">
            authority = #{authority,jdbcType=CHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="userName != null">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="authority != null">
            authority = #{authority,jdbcType=CHAR},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cayzlh.jwt.model.AuthRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_auth_role
    set user_name = #{userName,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.cayzlh.jwt.model.example.AuthRoleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_auth_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    'true' as QUERYID,
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    from t_auth_role
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_auth_role
    (user_name, authority, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userName,jdbcType=VARCHAR}, #{item.authority,jdbcType=CHAR}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_auth_role (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'user_name' == column.value">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'authority' == column.value">
          #{item.authority,jdbcType=CHAR}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="com.cayzlh.jwt.model.AuthRole" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_auth_role
    (id, user_name, authority, create_time)
    values
    (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{authority,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    user_name = #{userName,jdbcType=VARCHAR}, 
    authority = #{authority,jdbcType=CHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="com.cayzlh.jwt.model.AuthRole" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_auth_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id,
          </if>
          <if test="_parameter.hasSelective('user_name')">
            user_name,
          </if>
          <if test="_parameter.hasSelective('authority')">
            authority,
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id,
          </if>
          <if test="userName != null">
            user_name,
          </if>
          <if test="authority != null">
            authority,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('user_name')">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('authority')">
            #{authority,jdbcType=CHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="userName != null">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="authority != null">
            #{authority,jdbcType=CHAR},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('id')">
            id = #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('user_name')">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('authority')">
            authority = #{authority,jdbcType=CHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            id = #{id,jdbcType=BIGINT},
          </if>
          <if test="userName != null">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="authority != null">
            authority = #{authority,jdbcType=CHAR},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
</mapper>